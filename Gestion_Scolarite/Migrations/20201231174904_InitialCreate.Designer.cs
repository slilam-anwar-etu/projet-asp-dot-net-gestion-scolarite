// <auto-generated />
using System;
using Gestion_Scolarite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gestion_Scolarite.Migrations
{
    [DbContext(typeof(Gestion_ScolariteContext))]
    [Migration("20201231174904_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Gestion_Scolarite.Models.Absence", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Absence_Justifie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EtudiantID")
                        .HasColumnType("int");

                    b.Property<byte[]>("Fichier")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SeanceID")
                        .HasColumnType("int");

                    b.Property<string>("justification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EtudiantID");

                    b.HasIndex("SeanceID");

                    b.ToTable("Absence");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Departement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Filiere", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnseignantID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EnseignantID");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Matiere", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnseignantID")
                        .HasColumnType("int");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<int>("VolumeHoraire")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EnseignantID");

                    b.HasIndex("ModuleID");

                    b.ToTable("Matiere");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnseignantID")
                        .HasColumnType("int");

                    b.Property<int>("NiveauID")
                        .HasColumnType("int");

                    b.Property<string>("Semestre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EnseignantID");

                    b.HasIndex("NiveauID");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Niveau", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FiliereID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FiliereID");

                    b.ToTable("Niveau");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Note", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EtudiantID")
                        .HasColumnType("int");

                    b.Property<int>("MatiereID")
                        .HasColumnType("int");

                    b.Property<int>("Note_Finale")
                        .HasColumnType("int");

                    b.Property<int>("Note_Initiale")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EtudiantID");

                    b.HasIndex("MatiereID");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Seance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date_Seance")
                        .HasColumnType("datetime2");

                    b.Property<int>("Heures")
                        .HasColumnType("int");

                    b.Property<int>("MatiereID")
                        .HasColumnType("int");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MatiereID");

                    b.ToTable("Seance");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Admin", b =>
                {
                    b.HasBaseType("Gestion_Scolarite.Models.User");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Enseignant", b =>
                {
                    b.HasBaseType("Gestion_Scolarite.Models.User");

                    b.Property<int>("DepartementID")
                        .HasColumnType("int");

                    b.HasIndex("DepartementID");

                    b.ToTable("Enseignant");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Etudiant", b =>
                {
                    b.HasBaseType("Gestion_Scolarite.Models.User");

                    b.Property<int>("NiveauID")
                        .HasColumnType("int");

                    b.HasIndex("NiveauID");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Absence", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("EtudiantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.Seance", "Seance")
                        .WithMany()
                        .HasForeignKey("SeanceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("Seance");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Filiere", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Enseignant", "Responsable")
                        .WithMany()
                        .HasForeignKey("EnseignantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Matiere", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Enseignant", "Enseignant")
                        .WithMany()
                        .HasForeignKey("EnseignantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enseignant");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Module", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Enseignant", "Responsable")
                        .WithMany()
                        .HasForeignKey("EnseignantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.Niveau", "Niveau")
                        .WithMany()
                        .HasForeignKey("NiveauID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Niveau");

                    b.Navigation("Responsable");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Niveau", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Filiere", "Filiere")
                        .WithMany()
                        .HasForeignKey("FiliereID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Note", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("EtudiantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Seance", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Matiere", "Matiere")
                        .WithMany()
                        .HasForeignKey("MatiereID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matiere");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.User", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Admin", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Gestion_Scolarite.Models.Admin", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Enseignant", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.Departement", "Departement")
                        .WithMany()
                        .HasForeignKey("DepartementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Gestion_Scolarite.Models.Enseignant", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Departement");
                });

            modelBuilder.Entity("Gestion_Scolarite.Models.Etudiant", b =>
                {
                    b.HasOne("Gestion_Scolarite.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Gestion_Scolarite.Models.Etudiant", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("Gestion_Scolarite.Models.Niveau", "Niveau")
                        .WithMany()
                        .HasForeignKey("NiveauID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Niveau");
                });
#pragma warning restore 612, 618
        }
    }
}
